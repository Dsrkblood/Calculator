{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode Projects\\\\LearningReact\\\\ReactRouter\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  console.log(event);\n  console.log(events);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    // \tstatus: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect(\"/events\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","console","log","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["D:/VSCode Projects/LearningReact/ReactRouter/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {\r\n\tAwait,\r\n\tdefer,\r\n\tjson,\r\n\tredirect,\r\n\tuseRouteLoaderData,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nexport default function EventDetailPage() {\r\n\tconst { event, events } = useRouteLoaderData(\"event-detail\");\r\nconsole.log(event);\r\nconsole.log(events);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n\t\t\t\t<Await resolve={event}>\r\n\t\t\t\t\t{loadedEvent => <EventItem event={loadedEvent} />}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t\t<Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n\t\t\t\t<Await resolve={events}>\r\n\t\t\t\t\t{loadedEvents => <EventsList events={loadedEvents} />}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nasync function loadEvent(id) {\r\n\tconst response = await fetch(`http://localhost:8080/events/${id}`);\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch details for selected event.\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.event;\r\n\t}\r\n}\r\n\r\nasync function loadEvents() {\r\n\tconst response = await fetch(\"http://localhost:8080/events\");\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: \"Could not fetch events.\" };\r\n\t\t// throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n\t\t// \tstatus: 500,\r\n\t\t// });\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch events.\" },\r\n\t\t\t{\r\n\t\t\t\tstatus: 500,\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t}\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n\tconst id = params.eventId;\r\n\r\n\treturn defer({\r\n\t\tevent: loadEvent(id),\r\n\t\tevents: loadEvents(),\r\n\t});\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n\tconst id = params.eventId;\r\n\tconst response = await fetch(`http://localhost:8080/events/${id}`, {\r\n\t\tmethod: request.method,\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json({ message: \"Could not delete event.\" }, { status: 500 });\r\n\t} else {\r\n\t\treturn redirect(\"/events\");\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}