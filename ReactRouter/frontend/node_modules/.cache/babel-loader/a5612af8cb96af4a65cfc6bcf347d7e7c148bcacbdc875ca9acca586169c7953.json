{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLoaderData, json, defer } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  return;\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    // \tstatus: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","EventsList","EventsPage","_s","data","_c","loadEvents","response","fetch","ok","message","status","loader","events","$RefreshReg$"],"sources":["D:/VSCode Projects/LearningReact/ReactRouter/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n\tconst data = useLoaderData()\r\n\r\n\treturn \r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n\tconst response = await fetch(\"http://localhost:8080/events\");\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: \"Could not fetch events.\" };\r\n\t\t// throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n\t\t// \tstatus: 500,\r\n\t\t// });\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch events.\" },\r\n\t\t\t{\r\n\t\t\t\tstatus: 500,\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\treturn response;\r\n\t}\r\n}\r\n\r\nexport function loader() {\r\n\treturn defer({\r\n\t\tevents: loadEvents()\r\n\t})\r\n}\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B;AACD;AAACK,EAAA,CAJQD,UAAU;EAAA,QACLJ,aAAa;AAAA;AAAAO,EAAA,GADlBH,UAAU;AAMnB,eAAeA,UAAU;AAEzB,eAAeI,UAAUA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA,MAAMV,IAAI,CACT;MAAEW,OAAO,EAAE;IAA0B,CAAC,EACtC;MACCC,MAAM,EAAE;IACT,CACD,CAAC;EACF,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;AACD;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACxB,OAAOZ,KAAK,CAAC;IACZa,MAAM,EAAEP,UAAU,CAAC;EACpB,CAAC,CAAC;AACH;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}